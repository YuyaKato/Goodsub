package Goodsub;

import java.io.*;
import java.net.*;
import java.util.*;

public class SyncServer {

	/**
	 * @param args
	 */

	static final int GET_PORT = 10000;   // 受信用ポート番号
	static final int SEND_PORT = 10001;  // 送信用ポート番号
	TextFeald stfd;
	List<ObjectInputStream> inputs = new ArrayList<ObjectInputStream>();
	List<ObjectOutputStream> outputs = new ArrayList<ObjectOutputStream>();
	
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub

		new SyncServer().run();
	}
	void run() throws Exception{

		//テキストエリアを開く
		stfd = new TextFeald("sever", null);
		stfd.setVisible(true);

		// 受信用スレッド
		Thread gth = new Thread(){
			private ServerSocket serverSocket;
			public void run(){
				try {
					// クライアントとの接続
					serverSocket = new ServerSocket(GET_PORT);
					while(true){
						final Socket sock = serverSocket.accept();
						System.out.println("gServer accept");

						Thread gth2 = new Thread(){
							public void run(){
								InputStream in;
								try {
									in = sock.getInputStream();
									ObjectInputStream ois = new ObjectInputStream(in);
									while(true){
										showText(ois);
									}
								} catch (IOException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
								}
							}
						};
						gth2.start();
					}
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		};
		gth.start();
		/*		
		while(true){
			for(ObjectInputStream input : inputs){
				Object obj = input.readObject();
				showText(obj);
			}
		}
		 */
		
		// 送信用ソケット
		Thread sth = new Thread(){
			public void run(){
				try {
					final ServerSocket serverSocket = new ServerSocket(SEND_PORT);
					while(true){
						final Socket sock = serverSocket.accept();
						System.out.println("sServer accept");
						
						Thread sth2 = new Thread(){
							public void run(){
								OutputStream out;
								try {
									out = sock.getOutputStream();
									ObjectOutputStream oos = new ObjectOutputStream(out);
									// oos.writeObject();
								} catch (IOException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
								}
							}
						};
						sth2.start();

						// outputText(serverSocket);
					}
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}
		};
		sth.start();
		
		while(true){
			
		}

		/*		
		while(true){
			if(ois != null){
				obj = ois.readObject();
			}
			if(obj instanceof String){
				stfd.jta.setText((String) obj);	
			}
		}
		 */

		/*
		try{
			InputStream in = sock.getInputStream();
			ObjectInputStream ois = new ObjectInputStream(in);

			while(true){
				Object obj = ois.readObject();
				if(obj instanceof String){
					stfd.jta.setText((String) obj);	
				}
			}		
		}catch(Exception ex){
			ex.printStackTrace();
		}
		 */

	}
	
	/*
	void outputText(ServerSocket osock) throws Exception{
		
		Socket sock = osock.accept();
		System.out.println("sServer accept");
		OutputStream out = sock.getOutputStream();
		ObjectOutputStream oos = new ObjectOutputStream(out);
		outputs.add(oos);
	}
	*/

	// サーバテキストフィールドに表示
	void showText(ObjectInputStream sois){
		Object sobj = null;
		try {
			sobj = sois.readObject();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if(sobj instanceof String){
			stfd.jta.setText((String) sobj);	
		}	
	}

}
